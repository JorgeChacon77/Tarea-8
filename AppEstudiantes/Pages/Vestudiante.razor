@page "/v_estudiante"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Formulario Estudiante</h1>

@if (getBranchesError || branches is null)
{
    <p>No se encontro la Apy.</p>
}
else
{
    <ul>
        @foreach (var branch in branches)
        {
            <li>@branch.Id_estudiantes</li>
            <li>@branch.Carne</li>
            <li>@branch.Nombres</li>
            <li>@branch.Apellidos</li>
            <li>@branch.Direccion</li>
            <li>@branch.Telefono</li>
            <li>@branch.Correo_electronico</li>
            <li>@branch.Id_tipo_sangre</li>
            <li>@branch.Fecha_nacimiento</li>
        }
    </ul>
}

@code {
    private IEnumerable<Estudiante>? branches = Array.Empty<Estudiante>();
    private bool getBranchesError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:7131/api/Estudiantes");
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            branches = await JsonSerializer.DeserializeAsync
                <IEnumerable<Estudiante>>(responseStream);
        }
        else
        {
            getBranchesError = true;
        }

        shouldRender = true;
    }

    public class Estudiante
    {
        [JsonPropertyName("id_estudiantes")]
        public int Id_estudiantes { get; set; }
        [JsonPropertyName("carne")]
        public string? Carne { get; set; }
        [JsonPropertyName("nombres")]
        public string? Nombres { get; set; }
        [JsonPropertyName("apellidos")]
        public string? Apellidos { get; set; }
        [JsonPropertyName("direccion")]
        public string? Direccion { get; set; }
        [JsonPropertyName("telefono")]
        public string? Telefono { get; set; }
        [JsonPropertyName("correo_electronico")]
        public string? Correo_electronico { get; set; }
        [JsonPropertyName("id_tipo_sangre")]
        public string? Id_tipo_sangre { get; set; }
        [JsonPropertyName("fecha_nacimiento")]
        public DateTime Fecha_nacimiento { get; set; }
    }
}